* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

.container {
    display: flex;
    background-color: silver;
    justify-content: space-between;
}

.box {
    height: 100px;
    width: 200px;
    text-align: center;
    font-weight: 1000;
    padding-top: 20px;
    flex-basis: auto;
    /* A flex-grow tulajdonság megadja egy adott elemre, hogy szélességben megnyúljon-e, ha van rendelkezésre álló hely.
    Amennyiben több elem rendelkezik ilyen tulajdonásggal, a rendelkezésre álló hely a flex-grow tulajdonság 
    értékével arányosan oszlik el az elemek között. Alapértelmezetten értéke 0 - nincs oldalirányú kitöltés*/

    /* A flex-shrink tulajdonság megadja, hogy ha a szélességben szűküljön-e, ha nincs elegendő rendelkezésre
    álló hely, hogy az alapértelmezett méretei megjelenjenek. Az érték arányában történik a szűkítés az egyes
    elemek között. Alapértelmezetten ez az érték 1 - az elemek összeszűkülnek ha kevés a hely. */

    /* A flex-basis tulajdonság azt adja meg, hogy mi az alapértelmezett mérete egy elemnek, mielótt bármely más
    flexbox tulajdonság módosítaná a méretét. Alapértelmezetten a megadott magasság/szélesség tulajdonság. */

    /* flex: flex-grow(0), flex-shrink(1), flex-basis(auto) <-- ennek a használata javasolt az áttekinthetőség érdekében*/

    /* Az order tulajdonság a sorrend az érték alapján, alapértelmezetten minden elemnek 0, és az ugyanolyan sorszámú 
    elemek a html alapján rendeződnek - a módosítása indokolt esetben <--> akadálymentes weboldalak */

    /* Az align-self tulajdonsággal felülírható egyes elemeken az align-items tulajdonsággal a konténerre megadott tulajdonság */
}


.box-1 {
    background-color: #CA2E55;
    flex-grow: 1;
    flex-shrink: 0;
}

.box-2 {
    background-color: #FFE0B5;
    flex-grow: 2;
    flex-shrink: 1;
}

.box-3 {
    background-color: #BDB246;
    flex-grow: 1;
    flex-shrink: 2;
}

.box-4 {
    background-color: #acfcac;
    flex-grow: 1;
    flex-shrink: 3;
}